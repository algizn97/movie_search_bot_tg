from aiogram.fsm.state import StatesGroup, State


class Search(StatesGroup):
    """
    Группа состояний для поиска фильмов.

    Атрибуты:
        name (State): Состояние для захвата ввода названия фильма.
        count (State): Состояние для захвата количества запрашиваемых результатов.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    name = State()
    count = State()
    paginator = State()


class Rating(StatesGroup):
    """
    Группа состояний для поиска фильмов по рейтингу.

    Атрибуты:
        rating (State): Состояние для захвата ввода рейтинга.
        genre (State): Состояние для захвата ввода жанра.
        ask_genre (State): Состояние, в котором бот спрашивает пользователя, хочет ли он выбрать жанр.
        count (State): Состояние для захвата количества запрашиваемых результатов.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    rating = State()
    genre = State()
    ask_genre = State()
    count = State()
    paginator = State()


class LowBudget(StatesGroup):
    """
    Группа состояний для поиска фильмов с низким бюджетом.

    Атрибуты:
        budget (State): Состояние для захвата ввода лимита бюджета.
        genre (State): Состояние для захвата ввода жанра.
        ask_genre (State): Состояние, в котором бот спрашивает пользователя, хочет ли он выбрать жанр.
        count (State): Состояние для захвата количества запрашиваемых результатов.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    budget = State()
    genre = State()
    ask_genre = State()
    count = State()
    paginator = State()


class HighBudget(StatesGroup):
    """
    Группа состояний для поиска фильмов с высоким бюджетом.

    Атрибуты:
        budget (State): Состояние для захвата ввода лимита бюджета.
        genre (State): Состояние для захвата ввода жанра.
        ask_genre (State): Состояние, в котором бот спрашивает пользователя, хочет ли он выбрать жанр.
        count (State): Состояние для захвата количества запрашиваемых результатов.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    budget = State()
    genre = State()
    ask_genre = State()
    count = State()
    paginator = State()


class Genre(StatesGroup):
    """
    Группа состояний для поиска фильмов по жанру.

    Атрибуты:
        genre (State): Состояние для захвата ввода жанра.
        count (State): Состояние для захвата количества запрашиваемых результатов.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    genre = State()
    count = State()
    paginator = State()


class HistoryState(StatesGroup):
    """
    Группа состояний для управления историей запросов пользователя.

    Атрибуты:
        history (State): Состояние для обработки запросов пользователя, связанных с их историей поиска.
        paginator (State): Заполнитель для логики разбивки на страницы,
        позволяющий пользователям перемещаться по результатам.
    """
    history = State()
    paginator = State()

